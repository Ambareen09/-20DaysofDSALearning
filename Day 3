Brushed my coding skills starting from the basics.
I left coding a long time ago and started exploring other fields which resulted in backing off from this. Now I've started it again, thus, I am starting from the basics.

Problem 1:
Trailing zeroes in factorial: To find the no. of zeroes at the end of the factorial of a given no.(n),
Eg: n=5
output: 1
Explaination: 5!= 120, which has 1 0 at the end.

int countTrailingZeros(int n)
{
	int res = 0;

	for(int i=5; i<=n; i=i*5)
	{
		res = res + (n / i);
	}

	return res;
}
Time Complexity: Theta(logn)

Problem 2:
Greatest Common Divisior of A number, by Euclidean Algorithm

int gcd(int a, int b)
{
  if(b==0)
  return a;
  else 
  return (b,a%b);
 }
 Time Complexity: O(logn)
 
 Problem 3:
 Least Common Divisor of a number, by Euclidean Algorithm
 int gcd(int a, int b)
{
	if(b==0)
		return a;

	return gcd(b, a % b);
}

int lcm(int a, int b)
{
    return (a * b) / gcd(a, b);
}

Time Complexity: O(logn)

Problem 4: Prime Numbers
bool isPrime(int n)
{
	if(n==1)
		return false;

	if(n==2 || n==3)
		return true;

	if(n%2==0 || n%3==0)
		return false;

	for(int i=5; i*i<=n; i=i+6)
	{
		if(n % i == 0 || n % (i + 2) == 0)
			return false; 
	}

	return true;
}

Time Complexity: O(sqrt(n))

